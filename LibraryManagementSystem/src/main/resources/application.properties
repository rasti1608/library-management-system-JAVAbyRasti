spring.application.name=LibraryManagementSystem

# Run on 8085 (since 8080 was occupied)
server.port=8085

# Disable default login (not actually needed if you have your own AuthService, but fine to leave)
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN

# Thread pool tuning (optional, but safe)
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

# JSON formatting
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent-output=false

# Cache optimization
spring.cache.cache-names=books,users,rentals
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=5m

# Logging
logging.level.com.example.librarymanagementsystem=INFO
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=5

# Debug logging for web and swagger (drop to INFO if too noisy)
logging.level.org.springframework.web=DEBUG
logging.level.org.springdoc=TRACE

# Swagger configuration
springdoc.packagesToScan=com.example.librarymanagementsystem.controller
springdoc.pathsToMatch=/**

# Enable custom exception handler
app.exception-handler.enabled=false

# JSESSIONID must be sent cross-site (Netlify ? Railway)
server.servlet.session.cookie.same-site=None
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true